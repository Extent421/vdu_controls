.\" Man page generated from reStructuredText.
.
.TH "VDU_CONTROLS" "1" "Sep 01, 2021" "" "vdu_controls"
.SH NAME
vdu_controls \- vdu_controls 1.0
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.SH VDU_CONTROLS.PY: A QT GUI WRAPPER FOR DDCUTIL
.sp
A GUI for controlling connected \fIVisual Display Units\fP (\fIVDU\fP\(aqs) (also known as \fIdisplays\fP, or \fImonitors\fP).
.SH USAGE::
.INDENT 0.0
.INDENT 3.5
.INDENT 0.0
.TP
.B vdu_controls.py [\-h]
[\-\-show {brightness,contrast,audio\-volume,input\-source,power\-mode,osd\-language}]
[\-\-hide {brightness,contrast,audio\-volume,input\-source,power\-mode,osd\-language}]
[\-\-enable\-vcp\-code vcp_code] [\-\-debug] [\-\-warnings]
[\-\-no\-splash] [\-\-sleep\-multiplier multiplier]
.UNINDENT
.UNINDENT
.UNINDENT
.SS Optional arguments:
.INDENT 0.0
.INDENT 3.5
.INDENT 0.0
.TP
.B \-h\fP,\fB  \-\-help
show this help message and exit
.TP
.BI \-\-show \ control_name
show specified control only (\-\-show may be specified multiple times)
.TP
.BI \-\-hide \ control_name
hide/disable a control (\-\-hide may be specified multiple times)
.TP
.BI \-\-enable\-vcp\-code \ vcp_code
enable a control for a vcp\-code unavailable via hide/show (may be specified multiple times)
.TP
.B \-\-debug
enable debug output to stdout
.TP
.B \-\-warnings
popup a warning when a VDU lacks an enabled control
.TP
.B \-\-no\-splash
don\(aqt show the splash screen
.TP
.BI \-\-sleep\-multiplier \ multiplier
protocol reliability multiplier for ddcutil (typically 0.1 .. 2.0, default is 0.5)
.UNINDENT
.UNINDENT
.UNINDENT
.SH DESCRIPTION
.sp
\fBvdu_controls\fP is a virtual control panel for physically connected VDU\(aqs.  It displays a set of controls for
each  DVI/DP/HDMI/USB connected VDU and uses the \fBddcutil\fP command line utility to issue \fIDisplay Data Channel\fP
(\fIDDC\fP) \fIVirtual Control Panel\fP  (\fIVCP\fP) commands to each of them. The intent is not to provide a comprehensive set
of controls but rather to provide a simple panel with a selection of essential controls for the desktop.
.sp
By default \fBvdu_controls\fP offers a subset of possible controls including brightness, contrast.  Additional controls
can be enabled via the \fB\-\-enable\-vcp\-code\fP option.
.sp
Builtin laptop displays normally don\(aqt implement DDC and those displays are not supported, but a laptop\(aqs
externally connected VDU\(aqs are likely to be controllable.
.sp
Some controls change the number of connected devices (for example, some VDU\(aqs support a power\-off command). If
such controls are used, \fBvdu_controls\fP will detect the change and will restart itself to reconfigure the controls
for the new situation (for example, DDC VDU 2 may now be DD VDU 1).  Similarly, if you physically unplug monitor, the
same thing will happen.
.sp
Note that some VDU settings may disable or enable other settings. For example, setting a monitor to a specific
picture\-profile might result in the contrast\-control being disabled, but \fBddc_controls\fP will not be aware of
the restriction resulting in its contrast\-control appearing to do nothing.
.SH CONFIGURATION
.sp
Most configuration is supplied via command line parameters.  There is an optional config file for each VDU
or VDU\-model.
.SS VDU/VDU\-model config files
.sp
The VDU config files are provided so that manufacturer supplied meta data when it proves to be inaccurate. These
config files can be model specific, or model and serial\-number specific. For example, a VCP query to my
LG monitor reports that it has four inputs, but in reality it only has three.  I can correct this as follows:
.INDENT 0.0
.INDENT 3.5
1 Run \fBvdu_control\fP in a console window and not which config files it\(aqs looking for:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
% ./vdu_controls.py
INFO: checking for config file \(aqfile:///home/michael/.config/vdu_controls/LG_HDR_4K_SN43328.conf\(aq
INFO: checking for config file \(aqfile:///home/michael/.config/vdu_controls/LG_HDR_4K.conf\(aq
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
2 Run \fBddcutil\fP to generate an initial text file of VDU capabilities:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
% ddcutil \-\-display 2 capabilities > /home/michael/.config/vdu_controls/LG_HDR_4K.conf
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
3 Edit the config file find the appropriate feature, in this case \fBFeature: 60 (Input Source)\fP:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
# Use a text editor to find the erronious DisplayPort\-2 and get rid of it.
% vi /home/michael/.config/vdu_controls/LG_HDR_4K.conf
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
4 Run \fBvdu_control\fP and confirm the the config file is being used and the correct number of inputs is shown:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
% ./vdu_controls.py
INFO: checking for config file \(aqfile:///home/michael/.config/vdu_controls/LG_HDR_4K_SN43328.conf\(aq
INFO: checking for config file \(aqfile:///home/michael/.config/vdu_controls/LG_HDR_4K.conf\(aq
WARNING: using config file \(aqfile:///home/michael/.config/vdu_controls/LG_HDR_4K.conf\(aq
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
In the case where the manufacturers serial number cannot be retrieved, \fBvdu_controls\fP will look for a config file
containing the display number instead.
.sp
The VDU Config files read by \fBvdu_controls\fP can only be used to alter or correct VCP codes already supported
by \fBddctutil\fP\&.  If the \fBddcutil\fP configuration output lists a VCP code as a \fImanufacturer specific feature\fP
then \fBddcutil\fP will refuse to set values for that code.  In the future it will be possible to fully enable
such codes by creating a \fBddcutil\fP user definition (\fB\-\-udef\fP) file.  The \fBddcutil \-\-udef\fP option is still
work in progress and unavailable at the time at the time of writing.
.SS Responsiveness
.sp
In order to support a wide variety of VDU\(aqs \fBddcutil\fP has to be conservative in respect to how fast it
communicates with VDU\(aqs.  If your VDU\(aqs are modern, you may find a smaller \fB\-\-sleep\-multipler\fP works just fine
and both \fBddctuil\fP and \fBvdu_controls\fP will be much more responsive.
.sp
Using VDU config files may speed up the startup by eliminating the need to run \fBddcutil\fP to retrieve
VDU capabilities.
.SH EXAMPLES
.INDENT 0.0
.INDENT 3.5
.INDENT 0.0
.TP
.B \fBvdu_controls.py\fP
All default controls.
.TP
.B \fBvdu_controls.py \-\-show brightness \-\-show contrast\fP
Specified controls only:
.TP
.B \fBvdu_controls.py \-\-hide contrast \-\-hide audio\-vulume\fP
All default controls except for those to be hidden.
.TP
.B \fBvdu_controls.py \-\-enable\-vcp\-code 70 \-\-warnings \-\-debug\fP
All default controls, plus a control for VCP_CODE 70, show any warnings, output debugging info.
.TP
.B \fBvdu_controls.py \-\-sleep\-multiplier 0.1\fP
All default controls, speed up or slow down ddcutil by passing a sleep multiplier.
.UNINDENT
.UNINDENT
.UNINDENT
.sp
This script often refers to displays and monitors as VDU\(aqs in order to
disambiguate the noun/verb duality of "display" and "monitor"
.SH PREREQUISITES
.sp
Described for OpenSUSE, similar for other distros:
.sp
Software:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
zypper install python38\-QtPy
zypper install ddcutil
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Kernel Modules:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
lsmod | grep i2c_dev
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Read ddcutil readme concerning config of i2c_dev with nvidia GPU\(aqs. Detailed ddcutil info at \fI\%https://www.ddcutil.com/\fP
.SH VDU_CONTROLS COPYRIGHT (C) 2021 MICHAEL HAMILTON
.sp
This program is free software: you can redistribute it and/or modify it
under the terms of the GNU General Public License as published by the
Free Software Foundation, version 3.
.sp
This program is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
more details.
.sp
You should have received a copy of the GNU General Public License along
with this program. If not, see <\fI\%https://www.gnu.org/licenses/\fP>.
.sp
\fBContact:\fP  m i c h a e l   @   a c t r i x   .   g e n   .   n z

.sp
.ce
----

.ce 0
.sp
.INDENT 0.0
.TP
.B vdu_controls.CONTINUOUS_TYPE = \(aqC\(aq
Could be a str enumeration of VCP types
.UNINDENT
.INDENT 0.0
.TP
.B vdu_controls.DDCUTIL = \(aq/usr/bin/ddcutil\(aq
Assumed location of ddcutil on a linux system.
.UNINDENT
.INDENT 0.0
.TP
.B class vdu_controls.DdcComboBox(vdu: \fI\%vdu_controls.DdcVdu\fP, vcp_capability: \fI\%vdu_controls.VcpCapability\fP)
GUI control for a DDC non\-continuously variable attribute, one that has a list of choices.
.sp
This is a duck\-typed GUI control widget (could inherit from an abstract type if we wanted to get formal about it).
.INDENT 7.0
.TP
.B refresh_data()
Query the VDU for a new data value and cache it (may be called from a task thread, so no GUI op\(aqs here).
.UNINDENT
.INDENT 7.0
.TP
.B refresh_view()
Copy the internally cached current value onto the GUI view.
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class vdu_controls.DdcMainWidget(enabled_vcp_codes: List[str], warnings: bool, debug: bool, sleep_multiplier: float, detect_vdu_hook: callable)
GUI for detected VDU\(aqs, it will construct and contain a control panel for each VDU.
.INDENT 7.0
.TP
.B refresh_data()
Refresh data from the VDU\(aqs. Called by a non\-GUI task. Not in the GUI\-thread, cannot do any GUI op\(aqs.
.UNINDENT
.INDENT 7.0
.TP
.B refresh_view()
Invoke when the GUI worker thread completes. Runs in the GUI thread and can refresh the GUI views.
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class vdu_controls.DdcSliderWidget(vdu: \fI\%vdu_controls.DdcVdu\fP, vcp_capability: \fI\%vdu_controls.VcpCapability\fP)
GUI control for a DDC continuously variable attribute.
.sp
A compound widget with icon, slider, and text\-field.  This is a duck\-typed GUI control widget (could inherit
from an abstract type if we wanted to get formal about it).
.INDENT 7.0
.TP
.B refresh_data()
Query the VDU for a new data value and cache it (may be called from a task thread, so no GUI op\(aqs here).
.UNINDENT
.INDENT 7.0
.TP
.B refresh_view()
Copy the internally cached current value onto the GUI view.
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class vdu_controls.DdcUtil(debug: bool = False, common_args: Optional[List[str]] = None)
Interface to the command line ddcutil Display Data Channel Utility for interacting with VDU\(aqs.
.INDENT 7.0
.TP
.B detect_monitors() -> List[Tuple[str, str, str, str]]
Return a list of (vdu_id, desc) tuples.
.UNINDENT
.INDENT 7.0
.TP
.B get_attribute(vdu_id: str, vcp_code: str) -> Tuple[str, str]
Given a VDU id and vcp_code, retrieve the attribute\(aqs current value from the VDU.
.sp
Two values are returned, the monitor reported current value, and the monitor reported maximum value. Only
attributes with "Continuous" values have a maximum, for consistency the method will return a zero maximum
for "Non\-Continuous" attributes.
.UNINDENT
.INDENT 7.0
.TP
.B query_capabilities(vdu_id: str, alternate_text=None) -> Mapping[str, \fI\%vdu_controls.VcpCapability\fP]
Return a map of vpc capabilities keyed by vcp code.
.UNINDENT
.INDENT 7.0
.TP
.B set_attribute(vdu_id: str, vcp_code: str, new_value: str)
Send a new value to a specific VDU and vcp_code.
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class vdu_controls.DdcVdu(vdu_id, vdu_model, vdu_serial, manufacturer, ddcutil: \fI\%vdu_controls.DdcUtil\fP)
Holds data specific to an individual VDU including a map of its capabilities.
.sp
Capabilities are either extracted from ddcutil output or read from a ~/.config/vdu\-control/ file.
The file option is available so that the output from "ddcutil \-\-display N capabilities" can be corrected because
it is sometimes incorrect (due to sloppy implementation by manufacturers). For example, my LG monitor reports
two Display\-Port inputs and it only has one.
.INDENT 7.0
.TP
.B get_description() -> str
Return a unique description using the serial\-number (if defined) or vdu_id.
.UNINDENT
.INDENT 7.0
.TP
.B get_full_id() -> Tuple[str, str, str, str]
Return a tuple that defines this VDU: (vdu_id, manufacturer, model, serial\-number).
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class vdu_controls.DdcVduWidget(vdu: \fI\%vdu_controls.DdcVdu\fP, enabled_vcp_codes: List[str], warnings: bool)
Widget that contains all the controls for a single VDU (monitor/display).
.sp
The widget maintains a list of GUI "controls" that are duck\-typed and will have refresh_data() and refresh_view()
methods.
.INDENT 7.0
.TP
.B number_of_controls() -> int
Return the number of VDU controls.  Might be zero if initialization discovered no controllable attributes.
.UNINDENT
.INDENT 7.0
.TP
.B refresh_data()
Tell the control widgets to get fresh VDU data (may be called from a task thread, so no GUI op\(aqs here).
.UNINDENT
.INDENT 7.0
.TP
.B refresh_view()
Tell the control widgets to refresh their views from their internally cached values.
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B vdu_controls.EXIT_CODE_FOR_RESTART = 1959
Internal special exit code used to signal that the exit handler should restart the program.
.UNINDENT
.INDENT 0.0
.TP
.B class vdu_controls.RefreshVduDataTask(ddc_widget)
Task to refresh VDU data from the physical VDU\(aqs.
.sp
Runs as a task because it can be quite slow depending on the number of VDU\(aqs, number of controls.  The task runs
outside the GUI thread and no parts of it can only update the GUI data, not the GUI view.
.INDENT 7.0
.TP
.B run()
Run a task that uses ddcutil to retrieve data for all the visible controls (may be slow).
.UNINDENT
.INDENT 7.0
.TP
.B task_finished
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B vdu_controls.SUPPORTED_VCP_CONTROLS = {\(aq10\(aq: <vdu_controls.VcpGuiControlDef object>, \(aq12\(aq: <vdu_controls.VcpGuiControlDef object>, \(aq60\(aq: <vdu_controls.VcpGuiControlDef object>, \(aq62\(aq: <vdu_controls.VcpGuiControlDef object>, \(aqCC\(aq: <vdu_controls.VcpGuiControlDef object>, \(aqD6\(aq: <vdu_controls.VcpGuiControlDef object>}
Default "usefull" VCP capabilities to be made available as GUI controls by default.
.UNINDENT
.INDENT 0.0
.TP
.B class vdu_controls.VcpCapability(vcp_code: str, vcp_name: str, vcp_type: str, values: Optional[List] = None, icon_source: Optional[bytes] = None)
Representation of a VCP (Virtual Control Panel) capability for a VDU.
.UNINDENT
.INDENT 0.0
.TP
.B class vdu_controls.VcpGuiControlDef(vcp_code, vcp_name, causes_config_change: bool = False, icon_source: Optional[bytes] = None)
Defines a potential VCP GUI control.
.INDENT 7.0
.TP
.B arg_name() -> str
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B vdu_controls.exception_handler(e_type, e_value, e_traceback)
Overarching error handler in case something unexpected happens.
.UNINDENT
.INDENT 0.0
.TP
.B vdu_controls.get_splash_image() -> PyQt5.QtGui.QPixmap
Get the splash pixmap from a KDE oxygen PNG file or, failing that, a small base64 encoded internal JPEG.
.UNINDENT
.INDENT 0.0
.TP
.B vdu_controls.install_as_desktop_application()
Self install this script in the current Linux user\(aqs bin directory and desktop applications\->settings menu.
.UNINDENT
.INDENT 0.0
.TP
.B vdu_controls.main()
vdu_control application main.
.UNINDENT
.INDENT 0.0
.TP
.B vdu_controls.restart_due_to_config_change()
Force a restart of the application.
.sp
To be invoked when part of the GUI executes a VCP command that changes the number of connected monitors or
when the GUI detects the number of monitors has changes.
.UNINDENT
.INDENT 0.0
.TP
.B vdu_controls.translate(source_text: str)
For future internationalization \- recommended way to do this at this time.
.UNINDENT
.INDENT 0.0
.IP \(bu 2
genindex
.IP \(bu 2
modindex
.IP \(bu 2
search
.UNINDENT
.SH AUTHOR
Michael Hamilton
.SH COPYRIGHT
2021, Michael Hamilton
.\" Generated by docutils manpage writer.
.
