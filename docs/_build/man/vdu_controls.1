.\" Man page generated from reStructuredText.
.
.TH "VDU_CONTROLS" "1" "Oct 09, 2021" "" "vdu_controls"
.SH NAME
vdu_controls \- vdu_controls 1.3.1
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.SH VDU_CONTROLS: A QT GUI WRAPPER FOR DDCUTIL
.sp
A GUI for controlling connected \fIVisual Display Units\fP (\fIVDU\fP\(aqs) (also known as \fIdisplays\fP, or \fImonitors\fP).
.SH USAGE:
.INDENT 0.0
.INDENT 3.5
.INDENT 0.0
.TP
.B vdu_controls [\-h]
[\-\-about] [\-\-detailed\-help]
[\-\-show {brightness,contrast,audio\-volume,input\-source,power\-mode,osd\-language}]
[\-\-hide {brightness,contrast,audio\-volume,input\-source,power\-mode,osd\-language}]
[\-\-enable\-vcp\-code vcp_code] [\-\-system\-tray] [\-\-debug] [\-\-warnings]
[\-\-no\-splash] [\-\-sleep\-multiplier multiplier]
[\-\-create\-config\-files]
[\-\-install] [\-\-uninstall]
.UNINDENT
.UNINDENT
.UNINDENT
.SS Optional arguments:
.INDENT 0.0
.INDENT 3.5
.INDENT 0.0
.TP
.B \-h\fP,\fB  \-\-help
show this help message and exit
.TP
.B \-\-detailed\-help
full help in markdown format
.TP
.B \-\-about
about vdu_controls
.TP
.BI \-\-show \ control_name
show specified control only (\-\-show may be specified multiple times)
.TP
.BI \-\-hide \ control_name
hide/disable a control (\-\-hide may be specified multiple times)
.TP
.BI \-\-enable\-vcp\-code \ vcp_code
enable a control for a vcp\-code unavailable via hide/show (may be specified multiple times)
.TP
.B \-\-system\-tray
start up as an entry in the system tray
.TP
.B \-\-debug
enable debug output to stdout
.TP
.B \-\-warnings
popup a warning when a VDU lacks an enabled control
.TP
.B \-\-no\-splash
don\(aqt show the splash screen
.TP
.BI \-\-sleep\-multiplier \ multiplier
protocol reliability multiplier for ddcutil (typically 0.1 .. 2.0, default is 0.5)
.TP
.B \-\-create\-config\-files
if they do not exist, create template config INI files in $HOME/.config/vdu_controls/
.TP
.B \-\-install
installs the vdu_controls in the current user\(aqs path and desktop application menu.
.TP
.B \-\-uninstall
uninstalls the vdu_controls application menu file and script for the current user.
.UNINDENT
.UNINDENT
.UNINDENT
.SH DESCRIPTION
.sp
\fBvdu_controls\fP is a virtual control panel for physically connected VDU\(aqs.  It displays a set of controls for
each  DVI/DP/HDMI/USB connected VDU and uses the \fBddcutil\fP command line utility to issue \fIDisplay Data Channel\fP
(\fIDDC\fP) \fIVirtual Control Panel\fP  (\fIVCP\fP) commands to each of them. The intent is not to provide a comprehensive set
of controls but rather to provide a simple panel with a selection of essential controls for the desktop.
.sp
A context menu containing this help is available by pressing the right\-mouse button either in the main user interface
or on the system\-tray icon.  \fBvdu_controls\fP may be run as a system\-tray entry by using the \fB\-\-system\-tray\fP option.
.sp
By default \fBvdu_controls\fP offers a subset of possible controls including brightness and contrast.  Further controls
can be added by using the \fB\-\-enable\-vcp\-code\fP option to add any other codes supported by \fBddcutil\fP\&.  The full list
of VCP codes supported by \fBddcutil\fP can be listed by running \fBddcutil vcpinfo \-\-verbose\fP\&. For example, the
VCP code 66 is listed as an on/off control for an ambient light sensor, this can be enabled for \fBvdu_controls\fP by
passing \fB\-\-enable\-vcp\-code 66\fP (the control will only appear in the user interface if the VDU reports that it
has that capability).
.sp
Builtin laptop displays normally don\(aqt implement DDC and those displays are not supported, but a laptop\(aqs
externally connected VDU\(aqs are likely to be controllable.
.sp
Some controls change the number of connected devices (for example, some VDU\(aqs support a power\-off command). If
such controls are used, \fBvdu_controls\fP will detect the change and will restart itself to reconfigure the controls
for the new situation (for example, DDC VDU 2 may now be DD VDU 1).  Similarly, if you physically unplug monitor, the
same thing will happen.
.sp
Note that some VDU settings may disable or enable other settings. For example, setting a monitor to a specific
picture\-profile might result in the contrast\-control being disabled, but \fBvdu_controls\fP will not be aware of
the restriction resulting in its contrast\-control erring or appearing to do nothing.
.SH CONFIGURATION
.sp
Configuration is supplied via command line parameters and config\-files.  The command line provides an immediate way
to temporarily alter the behaviour of the application. The config files provide a more comprehensive and permanent
solution for altering the application\(aqs configuration.
.SS Settings Menu and Config files
.sp
The right\-mouse context\-menu \fBSettings\fP item can be used to customise the application by writing to a set of config
files.  The \fBSettings\fP item will feature a tab for editing each config file.  The config files are named according
to the following scheme:
.INDENT 0.0
.INDENT 3.5
.INDENT 0.0
.IP \(bu 2
Application wide default config: \fB$HOME/.config/vdu_controls/vdu_controls.conf\fP
.IP \(bu 2
VDU model and serial number config: \fB$HOME/.config/vdu_controls/<model>_<serial|display_num>.conf\fP
.IP \(bu 2
VDU model only config: \fB$HOME/.config/vdu_controls/<model>.conf\fP
.UNINDENT
.UNINDENT
.UNINDENT
.sp
The application wide default file can be used to alter application settings and the set of default VDU controls.
.sp
The VDU\-specific config files can be used to:
.INDENT 0.0
.INDENT 3.5
.INDENT 0.0
.IP \(bu 2
Correct manufacturer built\-in meta data.
.IP \(bu 2
Customise which controls are to be provided for each VDU.
.IP \(bu 2
Set a optimal \fBddcutil\fP DDC communication speed\-multiplier for each VDU.
.UNINDENT
.UNINDENT
.UNINDENT
.sp
It should be noted that config files can only be used to alter definitions of VCP codes already supported
by \fBddcutil\fP\&.  If a VCP code is listed as a \fImanufacturer specific feature\fP it is not supported. Manufacturer
specific features should not be experimented with, some may have destructive or irreversible consequences that
may brick the hardware. It is possible to enable any codes by  creating a  \fBddcutil\fP user
definition (\fB\-\-udef\fP) file, BUT THIS SHOULD ONLY BE USED WITH EXTREME CAUTION AND CANNOT BE RECOMMENDED.
.sp
The config files are in INI\-format divided into a number of sections as outlined below:
.INDENT 0.0
.INDENT 3.5
# The vdu\-controls\-globals section is only required in $HOME/.config/vdu_controls/vdu_controls.conf
[vdu\-controls\-globals]
system\-tray\-enabled = yes|no
splash\-screen\-enabled = yes|no
warnings\-enabled = yes|no
debug\-enabled = yes|no
.sp
[vdu\-controls\-widgets]
# Yes/no for each of the control options that vdu_controls normally provides by default.
brightness = yes|no
contrast = yes|no
audio\-volume = yes|no
audio\-mute = yes|no
audio\-treble = yes|no
audio\-bass = yes|no
audio\-mic\-volume = yes|no
input\-source = yes|no
power\-mode = yes|no
osd\-language = yes|no
# The enable\-vcp\-codes option is a list of two\-digit hex values in CSV format.
# This option enables ddcutil supported codes that are not in the default set provided by vdu_controls.
enable\-vcp\-codes = NN, NN, NN
.sp
[ddcutil\-parameters]
# Useful values appear to be >=0.1
sleep\-multiplier = 0.5
.sp
[ddcutil\-capabilities]
# The (possibly edited) output from "ddcutil \-\-display N capabilities" with leading spaces retained.
capabilities\-override =
.UNINDENT
.UNINDENT
.sp
As well as using the \fBSettings\fP, config files may also be created by the command line option
.INDENT 0.0
.INDENT 3.5
vdu_controls \-\-create\-config\-files
.UNINDENT
.UNINDENT
.sp
which will create initial templates based on the currently connected VDU\(aqs.
.sp
The config files are completely optional, they need not be used if the existing command line options are found to be
adequate to the task at hand.
.SS Presets
.sp
A custom named preset can be used to save the current VDU settings for later recall. Any number of presets can be
created to suit different lighting conditions or different applications, for example: \fINight\fP, \fIDay\fP, \fIOvercast\fP,
\fISunny\fP, \fIPhotography\fP, and \fIVideo\fP\&.
.sp
The \fBPresets\fP item in right\-mouse \fBcontext\-menu\fP will bring up a dialog for managing and applying presets.
The \fBcontext\-menu\fP also includes a shortcut for applying each existing presets.
.sp
The preset files are named as follows:
.INDENT 0.0
.INDENT 3.5
\fB$HOME/.config/vdu_controls/Preset_<preset_name>.conf\fP
.UNINDENT
.UNINDENT
.sp
Presets are saved in INI\-file format for ease of editing.  Each preset file contains a section for each connected
VDU, something similar to the following example:
.INDENT 0.0
.INDENT 3.5
[HP_ZR24w_CNT008]
brightness = 50
osd\-language = 02
.sp
[LG_HDR_4K_Display2]
brightness = 13
audio\-speaker\-volume = 16
input\-source = 0f
.UNINDENT
.UNINDENT
.sp
Whe the GUI is used to create a preset file it saves a value for every VDU and every visible control.  A preset
file need not include all VDu\(aqs or settings, it can be manually edited to remove VDU\(aqs and settings that aren\(aqt
desired.
.SS Responsiveness
.sp
If your VDU\(aqs are modern, you may find a smaller sleep\-multiplier will speed up the \fBddcutil\fP/VDU protocol
exchanges making both \fBddcutil\fP and \fBvdu_controls\fP much more responsive.  In a multi\-VDU setup where the VDU\(aqs
are quite different, VDU config files can be used to specify individual multipliers (see previous section).
.sp
Startup speed may be increased by creating VDU config files with \fBcapabilities\-override\fP preset. Using an
override eliminates the need to run \fBddcutil\fP to retrieve VDU capabilities.  The \fB\-\-create\-config\-files\fP
of context\-menu settings\-editor will pre\-populate \fBcapabilities\-override\fP for each connected VDU.
.sp
Reducing the number of enabled controls can speed up the initialisation and reduce the time taken when the
refresh button is pressed.
.SH EXAMPLES
.INDENT 0.0
.INDENT 3.5
.INDENT 0.0
.TP
.B vdu_controls
All default controls.
.TP
.B vdu_controls \-\-show brightness \-\-show contrast
Specified controls only:
.TP
.B vdu_controls \-\-hide contrast \-\-hide audio\-volume
All default controls except for those to be hidden.
.TP
.B vdu_controls \-\-system\-tray \-\-no\-splash \-\-show brightness \-\-show audio\-volume
Start as a system tray entry without showing the splash\-screen.
.TP
.B vdu_controls \-\-create\-config\-files \-\-system\-tray \-\-no\-splash \-\-show brightness \-\-show audio\-volume
Create template config files in $HOME/.config/vdu_controls/ that include the other settings.
.TP
.B vdu_controls \-\-enable\-vcp\-code 63 \-\-enable\-vcp\-code 93 \-\-warnings \-\-debug
All default controls, plus controls for VCP_CODE 63 and 93, show any warnings, output debugging info.
.TP
.B vdu_controls \-\-sleep\-multiplier 0.1
All default controls, speed up ddcutil\-VDU interaction by passing a sleep multiplier.
.UNINDENT
.UNINDENT
.UNINDENT
.sp
This script often refers to displays and monitors as VDU\(aqs in order to
disambiguate the noun/verb duality of "display" and "monitor"
.SH PREREQUISITES
.sp
Described for OpenSUSE, similar for other distros:
.sp
Software:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
zypper install python38\-QtPy
zypper install ddcutil
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Kernel Modules:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
lsmod | grep i2c_dev
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Read ddcutil readme concerning config of i2c_dev with nvidia GPU\(aqs. Detailed ddcutil info at \fI\%https://www.ddcutil.com/\fP
.SH VDU_CONTROLS COPYRIGHT (C) 2021 MICHAEL HAMILTON
.sp
This program is free software: you can redistribute it and/or modify it
under the terms of the GNU General Public License as published by the
Free Software Foundation, version 3.
.sp
This program is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
more details.
.sp
You should have received a copy of the GNU General Public License along
with this program. If not, see <\fI\%https://www.gnu.org/licenses/\fP>.
.sp
\fBContact:\fP  m i c h a e l   @   a c t r i x   .   g e n   .   n z

.sp
.ce
----

.ce 0
.sp
.INDENT 0.0
.TP
.B class vdu_controls.AboutDialog
.INDENT 7.0
.TP
.B static invoke()
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B vdu_controls.CONTINUOUS_TYPE = \(aqC\(aq
Could be a str enumeration of VCP types
.UNINDENT
.INDENT 0.0
.TP
.B class vdu_controls.ContextMenu(about_action=None, help_action=None, chart_action=None, settings_action=None, presets_action=None, quit_action=None)
.INDENT 7.0
.TP
.B get_preset(name: str) -> PyQt5.QtWidgets.QAction
.UNINDENT
.INDENT 7.0
.TP
.B has_preset(name: str) -> bool
.UNINDENT
.INDENT 7.0
.TP
.B insert_preset(name: str) -> None
.UNINDENT
.INDENT 7.0
.TP
.B refresh_preset_menu() -> None
.UNINDENT
.INDENT 7.0
.TP
.B set_vdu_controls_main_window(main_window) -> None
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B vdu_controls.DDCUTIL = \(aqddcutil\(aq
Assuming ddcutil is somewhere on the PATH.
.UNINDENT
.INDENT 0.0
.TP
.B vdu_controls.DEFAULT_SPLASH_PNG = \(aq/usr/share/icons/oxygen/base/256x256/apps/preferences\-desktop\-display.png\(aq
A high resolution image, will fallback to an internal PNG if this file isn\(aqt found on the local system
.UNINDENT
.INDENT 0.0
.TP
.B class vdu_controls.DdcUtil(debug: bool = False, common_args=None, default_sleep_multiplier: float = 1.0)
Interface to the command line ddcutil Display Data Channel Utility for interacting with VDU\(aqs.
The exception callback can return True if we should retry after errors (after the callback takes
corrective action such as increasing the sleep_multiplier).
.INDENT 7.0
.TP
.B detect_monitors() -> List[Tuple[str, str, str, str]]
Return a list of (vdu_id, desc) tuples.
.UNINDENT
.INDENT 7.0
.TP
.B get_attribute(vdu_id: str, vcp_code: str, sleep_multiplier: Optional[float] = None) -> Tuple[str, str]
Given a VDU id and vcp_code, retrieve the attribute\(aqs current value from the VDU.
.sp
Two values are returned, the monitor reported current value, and the monitor reported maximum value. Only
attributes with "Continuous" values have a maximum, for consistency the method will return a zero maximum
for "Non\-Continuous" attributes.
.UNINDENT
.INDENT 7.0
.TP
.B get_supported_vcp_codes() -> Mapping[str, str]
Returns a map of descriptions keyed by vcp_code, the codes that ddcutil appears to support.
.UNINDENT
.INDENT 7.0
.TP
.B query_capabilities(vdu_id: str) -> str
Return a vpc capabilities string.
.UNINDENT
.INDENT 7.0
.TP
.B set_attribute(vdu_id: str, vcp_code: str, new_value: str, sleep_multiplier: Optional[float] = None) -> None
Send a new value to a specific VDU and vcp_code.
.UNINDENT
.INDENT 7.0
.TP
.B vcp_info() -> str
Returns info about all codes known to ddcutil, whether supported or not.
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class vdu_controls.DialogSingletonMixin
A mixin that can augment a QDialog or QMessageBox with code to enforce a singleton UI.
For example, it is used so that only ones settings editor can be active at a time.
.INDENT 7.0
.TP
.B closeEvent(event) -> None
Subclasses that implement their own closeEvent must call this closeEvent to deregister the singleton
.UNINDENT
.INDENT 7.0
.TP
.B debug = False
.UNINDENT
.INDENT 7.0
.TP
.B classmethod exists() -> bool
Returns true if the dialog has already been created.
.UNINDENT
.INDENT 7.0
.TP
.B make_visible()
If the dialog exists(), call this to make it visible by raising it.
Internal, used by the class method show_existing_dialog()
.UNINDENT
.INDENT 7.0
.TP
.B classmethod show_existing_dialog()
If the dialog exists(), call this to make it visible by raising it.
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B vdu_controls.EXIT_CODE_FOR_RESTART = 1959
Internal special exit code used to signal that the exit handler should restart the program.
.UNINDENT
.INDENT 0.0
.TP
.B class vdu_controls.GreyScaleDialog
Creates a dialog with a grey scale VDU calibration image.  Non\-model. Have as many as you like \- one per VDU.
.INDENT 7.0
.TP
.B closeEvent(self, QCloseEvent)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class vdu_controls.HelpDialog
.INDENT 7.0
.TP
.B static invoke()
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class vdu_controls.PresetController
.INDENT 7.0
.TP
.B delete_preset(preset_name: str, context_menu: \fI\%vdu_controls.ContextMenu\fP) -> None
.UNINDENT
.INDENT 7.0
.TP
.B find_preset_paths() -> Mapping[str, str]
.UNINDENT
.INDENT 7.0
.TP
.B restore_preset(preset_name: str, main_window: \fI\%vdu_controls.VduControlsMainWindow\fP) -> None
.UNINDENT
.INDENT 7.0
.TP
.B save_preset(preset_name: str, main_window: \fI\%vdu_controls.VduControlsMainWindow\fP, context_menu: \fI\%vdu_controls.ContextMenu\fP) -> None
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class vdu_controls.PresetsDialog(main_window: \fI\%vdu_controls.VduControlsMainWindow\fP, context_menu: \fI\%vdu_controls.ContextMenu\fP)
A dialog for creating/updating/removing presets.
.INDENT 7.0
.TP
.B class PresetWidget(name: str)
.UNINDENT
.INDENT 7.0
.TP
.B create_preset_widget(name, restore_action=None, save_action=None, delete_action=None)
.UNINDENT
.INDENT 7.0
.TP
.B has_preset(name) -> bool
.UNINDENT
.INDENT 7.0
.TP
.B static invoke(main_window: \fI\%vdu_controls.VduControlsMainWindow\fP, context_menu: \fI\%vdu_controls.ContextMenu\fP) -> None
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class vdu_controls.RefreshVduDataTask(main_widget: \fI\%vdu_controls.VduControlsMainWindow\fP)
Task to refresh VDU data from the physical VDU\(aqs.
.sp
Runs as a task because it can be quite slow depending on the number of VDU\(aqs, number of controls.  The task runs
outside the GUI thread and no parts of it can only update the GUI data, not the GUI view.
.INDENT 7.0
.TP
.B run() -> None
Run a task that uses ddcutil to retrieve data for all the visible controls (may be slow).
.UNINDENT
.INDENT 7.0
.TP
.B task_finished
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class vdu_controls.SettingsEditor(default_config: \fI\%vdu_controls.VduControlsConfig\fP, vdu_config_list: List[\fI\%vdu_controls.VduControlsConfig\fP])
Application Settings Editor, edits a default global settings file, and a settings file for each VDU.
The files are in INI format.  Internally the settings are VduControlsConfig wrappers around
the standard class configparser.ConfigParser.
.INDENT 7.0
.TP
.B class SettingsEditorBooleanWidget(ini_editable: configparser.ConfigParser, option: str, section: str)
.UNINDENT
.INDENT 7.0
.TP
.B class SettingsEditorCsvWidget(ini_editable: configparser.ConfigParser, option: str, section: str)
.UNINDENT
.INDENT 7.0
.TP
.B class SettingsEditorFloatWidget(ini_editable: configparser.ConfigParser, option: str, section: str)
.UNINDENT
.INDENT 7.0
.TP
.B class SettingsEditorTab(parent: PyQt5.QtWidgets.QWidget, vdu_config: \fI\%vdu_controls.VduControlsConfig\fP)
A tab corresponding to a settings file, generates UI widgets for each tab based on what\(aqs in the config.
.INDENT 7.0
.TP
.B is_unsaved() -> bool
.UNINDENT
.INDENT 7.0
.TP
.B save(cancel: int = 2097152) -> None
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B class SettingsEditorTextEditorWidget(ini_editable: configparser.ConfigParser, option: str, section: str)
.UNINDENT
.INDENT 7.0
.TP
.B closeEvent(self, QCloseEvent)
.UNINDENT
.INDENT 7.0
.TP
.B static invoke(default_config: \fI\%vdu_controls.VduControlsConfig\fP, vdu_config_list: List[\fI\%vdu_controls.VduControlsConfig\fP]) -> None
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B vdu_controls.VOLUME_SVG = b\(aq\en<svg xmlns="http://www.w3.org/2000/svg" viewBox="\-7 \-7 40 40" width="24" height="24">\en  <style id="current\-color\-scheme" type="text/css">\en        .ColorScheme\-Text { color:#232629; }\en    </style>\en  <g transform="translate(1,1)">\en    <g class="ColorScheme\-Text" fill="currentColor">\en      <path d="m14.324219 7.28125\-.539063.8613281a4 4 0 0 1 1.214844 2.8574219 4 4 0 0 1 \-1.210938 2.861328l.539063.863281a5 5 0 0 0 1.671875\-3.724609 5 5 0 0 0 \-1.675781\-3.71875z"/>\en      <path d="m13.865234 3.5371094\-.24414.9765625a7 7 0 0 1 4.378906 6.4863281 7 7 0 0 1 \-4.380859 6.478516l.24414.974609a8 8 0 0 0 5.136719\-7.453125 8 8 0 0 0 \-5.134766\-7.4628906z"/>\en      <path d="m3 8h2v6h\-2z" fill\-rule="evenodd"/>\en      <path d="m6 14 5 5h1v\-16h\-1l\-5 5z"/>\en    </g>\en  </g>\en</svg>\en\(aq
Creates a SVG of grey rectangles typical of the sort used for VDU calibration.
.UNINDENT
.INDENT 0.0
.TP
.B class vdu_controls.VcpCapability(vcp_code: str, vcp_name: str, vcp_type: str, values: Optional[List] = None, causes_config_change: bool = False, icon_source: Optional[bytes] = None)
Representation of a VCP (Virtual Control Panel) capability for a VDU.
.INDENT 7.0
.TP
.B property_name() -> str
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class vdu_controls.VduControlComboBox(vdu_model: \fI\%vdu_controls.VduController\fP, vcp_capability: \fI\%vdu_controls.VcpCapability\fP)
GUI control for a DDC non\-continuously variable attribute, one that has a list of choices.
.sp
This is a duck\-typed GUI control widget (could inherit from an abstract type if we wanted to get formal about it).
.INDENT 7.0
.TP
.B refresh_data() -> None
Query the VDU for a new data value and cache it (may be called from a task thread, so no GUI op\(aqs here).
.UNINDENT
.INDENT 7.0
.TP
.B refresh_view() -> None
Copy the internally cached current value onto the GUI view.
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class vdu_controls.VduControlPanel(vdu_model: \fI\%vdu_controls.VduController\fP, warnings: bool)
Widget that contains all the controls for a single VDU (monitor/display).
.sp
The widget maintains a list of GUI "controls" that are duck\-typed and will have refresh_data() and refresh_view()
methods.
.INDENT 7.0
.TP
.B number_of_controls() -> int
Return the number of VDU controls.  Might be zero if initialization discovered no controllable attributes.
.UNINDENT
.INDENT 7.0
.TP
.B refresh_data() -> None
Tell the control widgets to get fresh VDU data (may be called from a task thread, so no GUI op\(aqs here).
.UNINDENT
.INDENT 7.0
.TP
.B refresh_view() -> None
Tell the control widgets to refresh their views from their internally cached values.
.UNINDENT
.INDENT 7.0
.TP
.B restore_state(preset_ini: configparser.ConfigParser) -> None
.UNINDENT
.INDENT 7.0
.TP
.B save_state(preset_ini: configparser.ConfigParser) -> None
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class vdu_controls.VduControlSlider(vdu_model: \fI\%vdu_controls.VduController\fP, vcp_capability: \fI\%vdu_controls.VcpCapability\fP)
GUI control for a DDC continuously variable attribute.
.sp
A compound widget with icon, slider, and text\-field.  This is a duck\-typed GUI control widget (could inherit
from an abstract type if we wanted to get formal about it).
.INDENT 7.0
.TP
.B refresh_data() -> None
Query the VDU for a new data value and cache it (may be called from a task thread, so no GUI op\(aqs here).
.UNINDENT
.INDENT 7.0
.TP
.B refresh_view() -> None
Copy the internally cached current value onto the GUI view.
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class vdu_controls.VduController(vdu_id: str, vdu_model_name: str, vdu_serial: str, manufacturer: str, default_config: \fI\%vdu_controls.VduControlsConfig\fP, ddcutil: \fI\%vdu_controls.DdcUtil\fP)
Holds model+controller specific to an individual VDU including a map of its capabilities. A model object in
MVC speak.
.sp
The model configuration can optionally be read from an INI\-format config file held in $HOME/.config/vdu\-control/
.sp
Capabilities are either extracted from ddcutil output or read from the INI\-format files.  File read
capabilities are provided so that the output from "ddcutil \-\-display N capabilities" can be corrected (because
it is sometimes incorrect due to sloppy implementation by manufacturers). For example, my LG monitor reports
two Display\-Port inputs and it only has one.
.INDENT 7.0
.TP
.B get_attribute(vcp_code: str) -> Tuple[str, str]
.UNINDENT
.INDENT 7.0
.TP
.B get_full_id() -> Tuple[str, str, str, str]
Return a tuple that defines this VDU: (vdu_id, manufacturer, model, serial\-number).
.UNINDENT
.INDENT 7.0
.TP
.B get_vdu_description() -> str
Return a unique description using the serial\-number (if defined) or vdu_id.
.UNINDENT
.INDENT 7.0
.TP
.B set_attribute(vcp_code: str, value: str) -> None
.UNINDENT
.INDENT 7.0
.TP
.B write_template_config_files() -> None
Write template config files to $HOME/.config/vdu_controls/
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class vdu_controls.VduControlsConfig(config_name: str, default_enabled_vcp_codes: Optional[List] = None, include_globals: bool = False)
A vdu_controls config that can be read or written from INI style files by the standard configparser package.
Includes a method that can fold in values from command line arguments parsed by the standard argparse package.
.INDENT 7.0
.TP
.B are_warnings_enabled() -> bool
.UNINDENT
.INDENT 7.0
.TP
.B debug_dump() -> None
.UNINDENT
.INDENT 7.0
.TP
.B disable_supported_vcp_code(vcp_code: str) -> None
.UNINDENT
.INDENT 7.0
.TP
.B enable_supported_vcp_code(vcp_code: str) -> None
.UNINDENT
.INDENT 7.0
.TP
.B enable_unsupported_vcp_code(vcp_code: str) -> None
.UNINDENT
.INDENT 7.0
.TP
.B get_all_enabled_vcp_codes() -> List[str]
.UNINDENT
.INDENT 7.0
.TP
.B get_capabilities_alt_text() -> str
.UNINDENT
.INDENT 7.0
.TP
.B get_config_name() -> str
.UNINDENT
.INDENT 7.0
.TP
.B get_config_type(section: str, option: str) -> str
.UNINDENT
.INDENT 7.0
.TP
.B get_sleep_multiplier() -> float
.UNINDENT
.INDENT 7.0
.TP
.B is_debug_enabled() -> bool
.UNINDENT
.INDENT 7.0
.TP
.B is_splash_screen_enabled() -> bool
.UNINDENT
.INDENT 7.0
.TP
.B is_system_tray_enabled() -> bool
.UNINDENT
.INDENT 7.0
.TP
.B parse_args(args=None) -> argparse.Namespace
Parse command line arguments and integrate the results into this config
.UNINDENT
.INDENT 7.0
.TP
.B parse_file(config_path: pathlib.Path) -> None
Parse config values from file
.UNINDENT
.INDENT 7.0
.TP
.B restrict_to_actual_capabilities(vdu_capabilities: Mapping[str, \fI\%vdu_controls.VcpCapability\fP]) -> None
.UNINDENT
.INDENT 7.0
.TP
.B set_capabilities_alt_text(alt_text: str) -> None
.UNINDENT
.INDENT 7.0
.TP
.B write_file(config_path: pathlib.Path, overwrite: bool = False) -> None
Write the config to a file.  Used for creating initial template config files.
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class vdu_controls.VduControlsMainWindow(default_config: \fI\%vdu_controls.VduControlsConfig\fP, detect_vdu_hook: callable, app_context_menu: \fI\%vdu_controls.ContextMenu\fP)
GUI for detected VDU\(aqs, it will construct and contain a control panel for each VDU.
.INDENT 7.0
.TP
.B refresh_data() -> None
Refresh data from the VDU\(aqs. Called by a non\-GUI task. Not in the GUI\-thread, cannot do any GUI op\(aqs.
.UNINDENT
.INDENT 7.0
.TP
.B refresh_view() -> None
Invoke when the GUI worker thread completes. Runs in the GUI thread and can refresh the GUI views.
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class vdu_controls.VduGuiSupportedControls
Maps of controls supported by name on the command line and in config files.
.INDENT 7.0
.TP
.B by_arg_name = {\(aqaudio\-bass\(aq: <vdu_controls.VcpCapability object>, \(aqaudio\-mic\-volume\(aq: <vdu_controls.VcpCapability object>, \(aqaudio\-mute\(aq: <vdu_controls.VcpCapability object>, \(aqaudio\-treble\(aq: <vdu_controls.VcpCapability object>, \(aqaudio\-volume\(aq: <vdu_controls.VcpCapability object>, \(aqbrightness\(aq: <vdu_controls.VcpCapability object>, \(aqcontrast\(aq: <vdu_controls.VcpCapability object>, \(aqinput\-source\(aq: <vdu_controls.VcpCapability object>, \(aqosd\-language\(aq: <vdu_controls.VcpCapability object>, \(aqpower\-mode\(aq: <vdu_controls.VcpCapability object>}
.UNINDENT
.INDENT 7.0
.TP
.B by_code = {\(aq10\(aq: <vdu_controls.VcpCapability object>, \(aq12\(aq: <vdu_controls.VcpCapability object>, \(aq60\(aq: <vdu_controls.VcpCapability object>, \(aq62\(aq: <vdu_controls.VcpCapability object>, \(aq64\(aq: <vdu_controls.VcpCapability object>, \(aq8D\(aq: <vdu_controls.VcpCapability object>, \(aq8F\(aq: <vdu_controls.VcpCapability object>, \(aq91\(aq: <vdu_controls.VcpCapability object>, \(aqCC\(aq: <vdu_controls.VcpCapability object>, \(aqD6\(aq: <vdu_controls.VcpCapability object>}
.UNINDENT
.INDENT 7.0
.TP
.B ddcutil_supported = None
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B vdu_controls.create_icon_from_svg_string(svg_str: bytes)
There is no QIcon option for loading SVG from a string, only from a SVG file, so roll our own.
.UNINDENT
.INDENT 0.0
.TP
.B vdu_controls.exception_handler(e_type, e_value, e_traceback)
Overarching error handler in case something unexpected happens.
.UNINDENT
.INDENT 0.0
.TP
.B vdu_controls.get_config_path(config_name: str) -> pathlib.Path
.UNINDENT
.INDENT 0.0
.TP
.B vdu_controls.get_splash_image() -> PyQt5.QtGui.QPixmap
Get the splash pixmap from a KDE oxygen PNG file or, failing that, a small base64 encoded internal PNG.
.UNINDENT
.INDENT 0.0
.TP
.B vdu_controls.install_as_desktop_application(uninstall: bool = False)
Self install this script in the current Linux user\(aqs bin directory and desktop applications\->settings menu.
.UNINDENT
.INDENT 0.0
.TP
.B vdu_controls.main()
vdu_controls application main.
.UNINDENT
.INDENT 0.0
.TP
.B vdu_controls.proper_name(*args)
.UNINDENT
.INDENT 0.0
.TP
.B vdu_controls.restart_due_to_config_change() -> None
Force a restart of the application.
.sp
To be invoked when part of the GUI executes a VCP command that changes the number of connected monitors or
when the GUI detects the number of monitors has changes.
.UNINDENT
.INDENT 0.0
.TP
.B vdu_controls.translate(source_text: str)
For future internationalization \- recommended way to do this at this time.
.UNINDENT
.INDENT 0.0
.IP \(bu 2
genindex
.IP \(bu 2
modindex
.IP \(bu 2
search
.UNINDENT
.SH AUTHOR
Michael Hamilton
.SH COPYRIGHT
2021, Michael Hamilton
.\" Generated by docutils manpage writer.
.
