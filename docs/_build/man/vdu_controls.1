.\" Man page generated from reStructuredText.
.
.TH "VDU_CONTROLS" "1" "Sep 28, 2021" "" "vdu_controls"
.SH NAME
vdu_controls \- vdu_controls 1.3.1
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.SH VDU_CONTROLS: A QT GUI WRAPPER FOR DDCUTIL
.sp
A GUI for controlling connected \fIVisual Display Units\fP (\fIVDU\fP\(aqs) (also known as \fIdisplays\fP, or \fImonitors\fP).
.SH USAGE:
.INDENT 0.0
.INDENT 3.5
.INDENT 0.0
.TP
.B vdu_controls [\-h]
[\-\-about] [\-\-detailed\-help]
[\-\-show {brightness,contrast,audio\-volume,input\-source,power\-mode,osd\-language}]
[\-\-hide {brightness,contrast,audio\-volume,input\-source,power\-mode,osd\-language}]
[\-\-enable\-vcp\-code vcp_code] [\-\-system\-tray] [\-\-debug] [\-\-warnings]
[\-\-no\-splash] [\-\-sleep\-multiplier multiplier]
[\-\-create\-config\-files]
[\-\-install] [\-\-uninstall]
.UNINDENT
.UNINDENT
.UNINDENT
.SS Optional arguments:
.INDENT 0.0
.INDENT 3.5
.INDENT 0.0
.TP
.B \-h\fP,\fB  \-\-help
show this help message and exit
.TP
.B \-\-detailed\-help
full help in markdown format
.TP
.B \-\-about
about vdu_controls
.TP
.BI \-\-show \ control_name
show specified control only (\-\-show may be specified multiple times)
.TP
.BI \-\-hide \ control_name
hide/disable a control (\-\-hide may be specified multiple times)
.TP
.BI \-\-enable\-vcp\-code \ vcp_code
enable a control for a vcp\-code unavailable via hide/show (may be specified multiple times)
.TP
.B \-\-system\-tray
start up as an entry in the system tray
.TP
.B \-\-debug
enable debug output to stdout
.TP
.B \-\-warnings
popup a warning when a VDU lacks an enabled control
.TP
.B \-\-no\-splash
don\(aqt show the splash screen
.TP
.BI \-\-sleep\-multiplier \ multiplier
protocol reliability multiplier for ddcutil (typically 0.1 .. 2.0, default is 0.5)
.TP
.B \-\-create\-config\-files
if they do not exist, create template config INI files in $HOME/.config/vdu_controls/
.TP
.B \-\-install
installs the vdu_controls in the current user\(aqs path and desktop application menu.
.TP
.B \-\-uninstall
uninstalls the vdu_controls application menu file and script for the current user.
.UNINDENT
.UNINDENT
.UNINDENT
.SH DESCRIPTION
.sp
\fBvdu_controls\fP is a virtual control panel for physically connected VDU\(aqs.  It displays a set of controls for
each  DVI/DP/HDMI/USB connected VDU and uses the \fBddcutil\fP command line utility to issue \fIDisplay Data Channel\fP
(\fIDDC\fP) \fIVirtual Control Panel\fP  (\fIVCP\fP) commands to each of them. The intent is not to provide a comprehensive set
of controls but rather to provide a simple panel with a selection of essential controls for the desktop.
.sp
A context menu containing this help is available by pressing the right\-mouse button either in the main user interface
or on the system\-tray icon.  \fBvdu_controls\fP may be run as a system\-tray entry by using the \fB\-\-system\-tray\fP option.
.sp
By default \fBvdu_controls\fP offers a subset of possible controls including brightness and contrast.  Further controls
can be added by using the \fB\-\-enable\-vcp\-code\fP option to add any other codes supported by \fBddcutil\fP\&.  The full list
of VCP codes supported by \fBddcutil\fP can be listed by running \fBddcutil vcpinfo \-\-verbose\fP\&. For example, the
VCP code 66 is listed as an on/off control for an ambient light sensor, this can be enabled for \fBvdu_controls\fP by
passing \fB\-\-enable\-vcp\-code 66\fP (the control will only appear in the user interface if the VDU reports that it
has that capability).
.sp
Builtin laptop displays normally don\(aqt implement DDC and those displays are not supported, but a laptop\(aqs
externally connected VDU\(aqs are likely to be controllable.
.sp
Some controls change the number of connected devices (for example, some VDU\(aqs support a power\-off command). If
such controls are used, \fBvdu_controls\fP will detect the change and will restart itself to reconfigure the controls
for the new situation (for example, DDC VDU 2 may now be DD VDU 1).  Similarly, if you physically unplug monitor, the
same thing will happen.
.sp
Note that some VDU settings may disable or enable other settings. For example, setting a monitor to a specific
picture\-profile might result in the contrast\-control being disabled, but \fBvdu_controls\fP will not be aware of
the restriction resulting in its contrast\-control appearing to do nothing.
.SH CONFIGURATION
.sp
Configuration is supplied via command line parameters and config\-files.  The command line provides an immediate way
to temporarily alter the behaviour of the application. The config files provide a more comprehensive and permanent
solution for altering the application\(aqs configuration.
.SS Config files
.sp
\fBvdu_controls\fP may use several config files.  There may be a global config file for setting application
wide defaults.  There may be any number of model or serial\-number VDU\-specific config files for customising
\fBvdu_controls\fP for each VDU.  The config files are named as follows:
.INDENT 0.0
.INDENT 3.5
.INDENT 0.0
.IP \(bu 2
Application wide default config: \fB$HOME/.config/vdu_controls/vdu_controls.conf\fP
.IP \(bu 2
VDU model and serial number config: \fB$HOME/.config/vdu_controls/<model>_<serial|display_num>.conf\fP
.IP \(bu 2
VDU model only config: \fB$HOME/.config/vdu_controls/<model>.conf\fP
.UNINDENT
.UNINDENT
.UNINDENT
.sp
All config  files are INI\-format.  There are two easy ways to create them:
.INDENT 0.0
.INDENT 3.5
.INDENT 0.0
.IP \(bu 2
Run \fBvdu_controls\fP, use the right mouse to bring up the context\-menu, select \fBsettings\fP,
and then edit and save each of the settings tabs.
.IP \(bu 2
Run \fBvdu_controls \-\-create\-config\-files\fP to create templates for manual editing.
.UNINDENT
.UNINDENT
.UNINDENT
.sp
The VDU\-specific config files can be used to:.
.INDENT 0.0
.INDENT 3.5
.INDENT 0.0
.IP \(bu 2
Correct manufacturer built\-in meta data.
.IP \(bu 2
Customise which controls are to be provided.
.IP \(bu 2
Set a optimal \fBddcutil\fP DDC communication speed\-multiplier for the VDU.
.UNINDENT
.UNINDENT
.UNINDENT
.sp
The last two are particularly useful if a desktop has multiple VDU\(aqs that vary in features or DDC\-communications
speed.
.sp
Config files can only be used to alter definitions of VCP codes already supported by \fBddcutil\fP\&.  If a VCP code
is listed as a \fImanufacturer specific feature\fP it is not supported. Manufacturer specific features should not be
experimented with, some may have destructive or irreversible consequences that may brick the hardware. It is
possible to enable any codes by  creating a  \fBddcutil\fP user definition (\fB\-\-udef\fP) file, BUT THIS SHOULD ONLY
BE USED WITH EXTREME CAUTION AND CANNOT BE RECOMMENDED.
.sp
All config files have a similar format.
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
# The vdu\-controls\-globals section is only required in $HOME/.config/vdu_controls/vdu_controls.conf
[vdu\-controls\-globals]
system\-tray\-enabled = yes|no
splash\-screen\-enabled = yes|no
warnings\-enabled = yes|no
debug\-enabled = yes|no

[vdu\-controls\-widgets]
# Yes/no for each of the control options that vdu_controls normally provides by default.
brightness = yes|no
contrast = yes|no
audio\-volume = yes|no
audio\-mute = yes|no
audio\-treble = yes|no
audio\-bass = yes|no
audio\-mic\-volume = yes|no
input\-source = yes|no
power\-mode = yes|no
osd\-language = yes|no
# The enable\-vcp\-codes option is a list of two\-digit hex values in CSV format.
# This option enables ddcutil supported codes that are not in the default set provided by vdu_controls.
enable\-vcp\-codes = NN, NN, NN

[ddcutil\-parameters]
# Useful values appear to be >=0.1
sleep\-multiplier = 0.5

[ddcutil\-capabilities]
# The (possibly edited) output from "ddcutil \-\-display N capabilities" with leading spaces retained.
capabilities\-override =
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Responsiveness
.sp
If your VDU\(aqs are modern, you may find a smaller sleep\-multiplier will speed up the \fBddcutil\fP/VDU protocol
exchanges making both \fBddcutil\fP and \fBvdu_controls\fP much more responsive.  In a multi\-VDU setup where the VDU\(aqs
are quite different, VDU config files can be used to specify individual multipliers (see previous section).
.sp
Startup speed may be increased by creating VDU config files with \fBcapabilities\-override\fP preset. Using an
override eliminates the need to run \fBddcutil\fP to retrieve VDU capabilities.  The \fB\-\-create\-config\-files\fP
of context\-menu settings\-editor will pre\-populate \fBcapabilities\-override\fP for each connected VDU.
.sp
Reducing the number of enabled controls can speed up the initialisation and reduce the time taken when the
refresh button is pressed.
.SH EXAMPLES
.INDENT 0.0
.INDENT 3.5
.INDENT 0.0
.TP
.B \fBvdu_controls\fP
All default controls.
.TP
.B \fBvdu_controls \-\-show brightness \-\-show contrast\fP
Specified controls only:
.TP
.B \fBvdu_controls \-\-hide contrast \-\-hide audio\-volume\fP
All default controls except for those to be hidden.
.TP
.B \fBvdu_controls \-\-system\-tray \-\-no\-splash \-\-show brightness \-\-show audio\-volume\fP
Start as a system tray entry without showing the splash\-screen.
.TP
.B \fBvdu_controls \-\-create\-config\-files \-\-system\-tray \-\-no\-splash \-\-show brightness \-\-show audio\-volume\fP
Create template config files in $HOME/.config/vdu_controls/ that include the other settings.
.TP
.B \fBvdu_controls \-\-enable\-vcp\-code 63 \-\-enable\-vcp\-code 93 \-\-warnings \-\-debug\fP
All default controls, plus controls for VCP_CODE 63 and 93, show any warnings, output debugging info.
.TP
.B \fBvdu_controls \-\-sleep\-multiplier 0.1\fP
All default controls, speed up ddcutil\-VDU interaction by passing a sleep multiplier.
.UNINDENT
.UNINDENT
.UNINDENT
.sp
This script often refers to displays and monitors as VDU\(aqs in order to
disambiguate the noun/verb duality of "display" and "monitor"
.SH PREREQUISITES
.sp
Described for OpenSUSE, similar for other distros:
.sp
Software:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
zypper install python38\-QtPy
zypper install ddcutil
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Kernel Modules:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
lsmod | grep i2c_dev
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Read ddcutil readme concerning config of i2c_dev with nvidia GPU\(aqs. Detailed ddcutil info at \fI\%https://www.ddcutil.com/\fP
.SH VDU_CONTROLS COPYRIGHT (C) 2021 MICHAEL HAMILTON
.sp
This program is free software: you can redistribute it and/or modify it
under the terms of the GNU General Public License as published by the
Free Software Foundation, version 3.
.sp
This program is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
more details.
.sp
You should have received a copy of the GNU General Public License along
with this program. If not, see <\fI\%https://www.gnu.org/licenses/\fP>.
.sp
\fBContact:\fP  m i c h a e l   @   a c t r i x   .   g e n   .   n z

.sp
.ce
----

.ce 0
.sp
.INDENT 0.0
.TP
.B vdu_controls.CONTINUOUS_TYPE = \(aqC\(aq
Could be a str enumeration of VCP types
.UNINDENT
.INDENT 0.0
.TP
.B class vdu_controls.ConfigEditor(default_config: \fI\%vdu_controls.VduControlsConfig\fP, vdu_model_list: List[\fI\%vdu_controls.VduModel\fP])
.INDENT 7.0
.TP
.B class ConfigEditorBooleanWidget(ini_editable, option, section)
.UNINDENT
.INDENT 7.0
.TP
.B class ConfigEditorCsvWidget(ini_editable, option, section)
.UNINDENT
.INDENT 7.0
.TP
.B class ConfigEditorFloatWidget(ini_editable, option, section)
.UNINDENT
.INDENT 7.0
.TP
.B class ConfigEditorTab(parent: PyQt5.QtWidgets.QWidget, vdu_config: \fI\%vdu_controls.VduControlsConfig\fP)
.INDENT 7.0
.TP
.B is_unsaved()
.UNINDENT
.INDENT 7.0
.TP
.B save(cancel: int = 2097152)
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B class ConfigEditorTextEditorWidget(ini_editable, option, section)
.UNINDENT
.INDENT 7.0
.TP
.B closeEvent(self, QCloseEvent)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B vdu_controls.DDCUTIL = \(aqddcutil\(aq
Assuming ddcutil is somewhere on the PATH.
.UNINDENT
.INDENT 0.0
.TP
.B vdu_controls.DEFAULT_SPLASH_PNG = \(aq/usr/share/icons/oxygen/base/256x256/apps/preferences\-desktop\-display.png\(aq
A high resolution image, will fallback to an internal PNG if this file isn\(aqt found on the local system
.UNINDENT
.INDENT 0.0
.TP
.B class vdu_controls.DdcUtil(debug: bool = False, common_args=None, default_sleep_multiplier: float = 1.0)
Interface to the command line ddcutil Display Data Channel Utility for interacting with VDU\(aqs.
The exception callback can return True if we should retry after errors (after the callback takes
corrective action such as increasing the sleep_multiplier).
.INDENT 7.0
.TP
.B detect_monitors() -> List[Tuple[str, str, str, str]]
Return a list of (vdu_id, desc) tuples.
.UNINDENT
.INDENT 7.0
.TP
.B get_attribute(vdu_id: str, vcp_code: str, sleep_multiplier: Optional[float] = None) -> Tuple[str, str]
Given a VDU id and vcp_code, retrieve the attribute\(aqs current value from the VDU.
.sp
Two values are returned, the monitor reported current value, and the monitor reported maximum value. Only
attributes with "Continuous" values have a maximum, for consistency the method will return a zero maximum
for "Non\-Continuous" attributes.
.UNINDENT
.INDENT 7.0
.TP
.B get_supported_vcp_codes() -> Mapping[str, str]
Returns a map of descriptions keyed by vcp_code, the codes that ddcutil appears to support.
.UNINDENT
.INDENT 7.0
.TP
.B query_capabilities(vdu_id: str) -> str
Return a vpc capabilities string.
.UNINDENT
.INDENT 7.0
.TP
.B set_attribute(vdu_id: str, vcp_code: str, new_value: str, sleep_multiplier: Optional[float] = None)
Send a new value to a specific VDU and vcp_code.
.UNINDENT
.INDENT 7.0
.TP
.B vcp_info() -> str
Returns info about all codes known to ddcutil, whether supported or not.
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B vdu_controls.EXIT_CODE_FOR_RESTART = 1959
Internal special exit code used to signal that the exit handler should restart the program.
.UNINDENT
.INDENT 0.0
.TP
.B class vdu_controls.HelpWidget
Extract detailed help from the scripts __doc__ string and display it in a popup window.
.UNINDENT
.INDENT 0.0
.TP
.B class vdu_controls.RefreshVduDataTask(ddc_widget)
Task to refresh VDU data from the physical VDU\(aqs.
.sp
Runs as a task because it can be quite slow depending on the number of VDU\(aqs, number of controls.  The task runs
outside the GUI thread and no parts of it can only update the GUI data, not the GUI view.
.INDENT 7.0
.TP
.B run()
Run a task that uses ddcutil to retrieve data for all the visible controls (may be slow).
.UNINDENT
.INDENT 7.0
.TP
.B task_finished
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class vdu_controls.VcpCapability(vcp_code: str, vcp_name: str, vcp_type: str, values: Optional[List] = None, icon_source: Optional[bytes] = None)
Representation of a VCP (Virtual Control Panel) capability for a VDU.
.UNINDENT
.INDENT 0.0
.TP
.B class vdu_controls.VduComboBoxControl(vdu_model: \fI\%vdu_controls.VduModel\fP, vcp_capability: \fI\%vdu_controls.VcpCapability\fP)
GUI control for a DDC non\-continuously variable attribute, one that has a list of choices.
.sp
This is a duck\-typed GUI control widget (could inherit from an abstract type if we wanted to get formal about it).
.INDENT 7.0
.TP
.B refresh_data()
Query the VDU for a new data value and cache it (may be called from a task thread, so no GUI op\(aqs here).
.UNINDENT
.INDENT 7.0
.TP
.B refresh_view()
Copy the internally cached current value onto the GUI view.
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class vdu_controls.VduControlPanel(vdu_model: \fI\%vdu_controls.VduModel\fP, warnings: bool)
Widget that contains all the controls for a single VDU (monitor/display).
.sp
The widget maintains a list of GUI "controls" that are duck\-typed and will have refresh_data() and refresh_view()
methods.
.INDENT 7.0
.TP
.B number_of_controls() -> int
Return the number of VDU controls.  Might be zero if initialization discovered no controllable attributes.
.UNINDENT
.INDENT 7.0
.TP
.B refresh_data()
Tell the control widgets to get fresh VDU data (may be called from a task thread, so no GUI op\(aqs here).
.UNINDENT
.INDENT 7.0
.TP
.B refresh_view()
Tell the control widgets to refresh their views from their internally cached values.
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class vdu_controls.VduControlsConfig(config_name: str, default_enabled_vcp_codes: Optional[List] = None, include_globals: bool = False)
A vdu_controls config that can be read or written from INI style files
.INDENT 7.0
.TP
.B are_warnings_enabled()
.UNINDENT
.INDENT 7.0
.TP
.B debug_dump()
.UNINDENT
.INDENT 7.0
.TP
.B disable_supported_vcp_code(vcp_code: str)
.UNINDENT
.INDENT 7.0
.TP
.B enable_supported_vcp_code(vcp_code: str)
.UNINDENT
.INDENT 7.0
.TP
.B enable_unsupported_vcp_code(vcp_code: str)
.UNINDENT
.INDENT 7.0
.TP
.B get_all_enabled_vcp_codes()
.UNINDENT
.INDENT 7.0
.TP
.B get_capabilities_alt_text()
.UNINDENT
.INDENT 7.0
.TP
.B get_config_name()
.UNINDENT
.INDENT 7.0
.TP
.B get_sleep_multiplier()
.UNINDENT
.INDENT 7.0
.TP
.B is_debug_enabled()
.UNINDENT
.INDENT 7.0
.TP
.B is_splash_screen_enabled()
.UNINDENT
.INDENT 7.0
.TP
.B is_system_tray_enabled()
.UNINDENT
.INDENT 7.0
.TP
.B parse_args(args=None) -> argparse.Namespace
Parse command line arguments and integrate the results into this config
.UNINDENT
.INDENT 7.0
.TP
.B parse_file(config_path: pathlib.Path)
Parse config values from file
.UNINDENT
.INDENT 7.0
.TP
.B set_capabilities_alt_text(alt_text: str)
.UNINDENT
.INDENT 7.0
.TP
.B write_file(config_path: pathlib.Path, include_globals: bool = True, overwrite: bool = False)
Write the config to a file.  Used for creating initial template config files.
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class vdu_controls.VduControlsMainWindow(default_config: \fI\%vdu_controls.VduControlsConfig\fP, detect_vdu_hook: callable)
GUI for detected VDU\(aqs, it will construct and contain a control panel for each VDU.
.INDENT 7.0
.TP
.B refresh_data()
Refresh data from the VDU\(aqs. Called by a non\-GUI task. Not in the GUI\-thread, cannot do any GUI op\(aqs.
.UNINDENT
.INDENT 7.0
.TP
.B refresh_view()
Invoke when the GUI worker thread completes. Runs in the GUI thread and can refresh the GUI views.
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class vdu_controls.VduGuiControlDef(vcp_code, vcp_name, causes_config_change: bool = False, icon_source: Optional[bytes] = None)
Defines the properties of a potential VCP GUI control.
.INDENT 7.0
.TP
.B arg_name() -> str
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class vdu_controls.VduGuiSupportedControls
Maps of controls supported by name on the command line and in config files.
.INDENT 7.0
.TP
.B by_arg_name = {\(aqaudio\-bass\(aq: <vdu_controls.VduGuiControlDef object>, \(aqaudio\-mic\-volume\(aq: <vdu_controls.VduGuiControlDef object>, \(aqaudio\-mute\(aq: <vdu_controls.VduGuiControlDef object>, \(aqaudio\-treble\(aq: <vdu_controls.VduGuiControlDef object>, \(aqaudio\-volume\(aq: <vdu_controls.VduGuiControlDef object>, \(aqbrightness\(aq: <vdu_controls.VduGuiControlDef object>, \(aqcontrast\(aq: <vdu_controls.VduGuiControlDef object>, \(aqinput\-source\(aq: <vdu_controls.VduGuiControlDef object>, \(aqosd\-language\(aq: <vdu_controls.VduGuiControlDef object>, \(aqpower\-mode\(aq: <vdu_controls.VduGuiControlDef object>}
.UNINDENT
.INDENT 7.0
.TP
.B by_code = {\(aq10\(aq: <vdu_controls.VduGuiControlDef object>, \(aq12\(aq: <vdu_controls.VduGuiControlDef object>, \(aq60\(aq: <vdu_controls.VduGuiControlDef object>, \(aq62\(aq: <vdu_controls.VduGuiControlDef object>, \(aq64\(aq: <vdu_controls.VduGuiControlDef object>, \(aq8D\(aq: <vdu_controls.VduGuiControlDef object>, \(aq8F\(aq: <vdu_controls.VduGuiControlDef object>, \(aq91\(aq: <vdu_controls.VduGuiControlDef object>, \(aqCC\(aq: <vdu_controls.VduGuiControlDef object>, \(aqD6\(aq: <vdu_controls.VduGuiControlDef object>}
.UNINDENT
.INDENT 7.0
.TP
.B ddcutil_supported = None
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class vdu_controls.VduModel(vdu_id: str, vdu_model_name: str, vdu_serial: str, manufacturer: str, default_config: \fI\%vdu_controls.VduControlsConfig\fP, ddcutil: \fI\%vdu_controls.DdcUtil\fP)
Holds data specific to an individual VDU including a map of its capabilities. A model object in MVC speak.
.sp
The model configuration can optionally be read from an INI\-format config file held in $HOME/.config/vdu\-control/
.sp
Capabilities are either extracted from ddcutil output or read from the INI\-format files.  File read
capabilities are provided so that the output from "ddcutil \-\-display N capabilities" can be corrected (because
it is sometimes incorrect due to sloppy implementation by manufacturers). For example, my LG monitor reports
two Display\-Port inputs and it only has one.
.INDENT 7.0
.TP
.B get_attribute(vcp_code: str) -> Tuple[str, str]
.UNINDENT
.INDENT 7.0
.TP
.B get_description() -> str
Return a unique description using the serial\-number (if defined) or vdu_id.
.UNINDENT
.INDENT 7.0
.TP
.B get_full_id() -> Tuple[str, str, str, str]
Return a tuple that defines this VDU: (vdu_id, manufacturer, model, serial\-number).
.UNINDENT
.INDENT 7.0
.TP
.B set_attribute(vcp_code: str, value: str)
.UNINDENT
.INDENT 7.0
.TP
.B write_template_config_files()
Write template config files to $HOME/.config/vdu_controls/
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class vdu_controls.VduSliderControl(vdu_model: \fI\%vdu_controls.VduModel\fP, vcp_capability: \fI\%vdu_controls.VcpCapability\fP)
GUI control for a DDC continuously variable attribute.
.sp
A compound widget with icon, slider, and text\-field.  This is a duck\-typed GUI control widget (could inherit
from an abstract type if we wanted to get formal about it).
.INDENT 7.0
.TP
.B refresh_data()
Query the VDU for a new data value and cache it (may be called from a task thread, so no GUI op\(aqs here).
.UNINDENT
.INDENT 7.0
.TP
.B refresh_view()
Copy the internally cached current value onto the GUI view.
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B vdu_controls.create_icon_from_svg_string(svg_str: bytes)
There is no QIcon option for loading SVG from a string, only from a SVG file, so roll our own.
.UNINDENT
.INDENT 0.0
.TP
.B vdu_controls.exception_handler(e_type, e_value, e_traceback)
Overarching error handler in case something unexpected happens.
.UNINDENT
.INDENT 0.0
.TP
.B vdu_controls.get_config_path(config_name)
.UNINDENT
.INDENT 0.0
.TP
.B vdu_controls.get_splash_image() -> PyQt5.QtGui.QPixmap
Get the splash pixmap from a KDE oxygen PNG file or, failing that, a small base64 encoded internal PNG.
.UNINDENT
.INDENT 0.0
.TP
.B vdu_controls.install_as_desktop_application(uninstall: bool = False)
Self install this script in the current Linux user\(aqs bin directory and desktop applications\->settings menu.
.UNINDENT
.INDENT 0.0
.TP
.B vdu_controls.main()
vdu_controls application main.
.UNINDENT
.INDENT 0.0
.TP
.B vdu_controls.restart_due_to_config_change()
Force a restart of the application.
.sp
To be invoked when part of the GUI executes a VCP command that changes the number of connected monitors or
when the GUI detects the number of monitors has changes.
.UNINDENT
.INDENT 0.0
.TP
.B vdu_controls.translate(source_text: str)
For future internationalization \- recommended way to do this at this time.
.UNINDENT
.INDENT 0.0
.IP \(bu 2
genindex
.IP \(bu 2
modindex
.IP \(bu 2
search
.UNINDENT
.SH AUTHOR
Michael Hamilton
.SH COPYRIGHT
2021, Michael Hamilton
.\" Generated by docutils manpage writer.
.
